Q1. 在傳遞訊息時, 會因為接受者特性的不同, 而有不同層面的意義或是導致不同的行為

Q2. onCrete   創建指定的方法
    onStart   呼叫方法並開始執行
    onResume  維持程式執行（除非離開程序）
    onPause   若被其他程序中斷(如來電)或要返回手機頁面時, 則會暫停
    onStop    若轉至其他程序則原程序停止運作
    onDestroy 終止應用程序（連背景執行也沒有, 完全釋放記憶體）
    onRestart 從桌面或其他程序返回原程序開始執行運作

Q3. Google提供給開發者的工具資料庫, 可以在gradle file新增後, 透過呼叫該工具資料庫簡化特定程式碼

Q4. Activity           提供每個app畫面的元件
    Service            可在背景執行特定命令的功能
    Content Provider   透過手機內部的中央儲存在不同的格式, 進而讓利用其格式特性讓app間分享資料
    Broadcast Receiver 透過系統性的廣播去告知符合條件的接收者, 接著讓特定接收者(符合廣播條件)回傳訊息
    Notification       由Notification Manger 管理通知訊息, 透過震動等來告知使用者新消息的機制
    Runtime Permission 當app需要開通特定權限時, 需向使用者詢問同意
    ANR                由於在UI Thread 進行太多繁雜耗時的運算時, 則會顯示系統沒有反應
    OOM                系統沒有足夠或相對應的記憶體去處理使用者的需求或指令, 則會跳出警告通知
    Exception          在程序除裡過程中, 出現與預想的計算過程或處理程序不符時 
    Material Design    透過不同的設計介面(如 按鍵形式, 顏色, 視覺效果等) 提供給使用者不同於一般手機的使用介面的使用模式

Q5. 在執行mainThread先暫停執行程序 並將運算能力保留給IO Thread, 待執行完後在返回main Thread的暫定執行程序上並再啟動
    可透過適當分配資源給運算能力給不同的thread, 避免耗時導致中止或無回應


